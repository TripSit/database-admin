version: '3.9'

name: tripsit-dev-apps

########################### EXTENSION FIELDS
# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID
 
# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  security_opt:
    - no-new-privileges:true
  restart: always

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

services:
  database:
    <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./Dockerfile.postgres
    container_name: database
    # Uncomment this if you want the DB to persist between rebuilds
    volumes:
      - ${DOCKERDIR}/appdata/database/data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - database-net
    environment:
      POSTGRES_USER: tripsit
      POSTGRES_DB: tripsit
      POSTGRES_PASSWORD: ${POSTGRESS_ROOT}
      # POSTGRES_HOST_AUTH_METHOD: trust
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=false

  database_pgadmin:
    build:
      context: ./
      dockerfile: ./Dockerfile.pgadmin
    restart: unless-stopped
    container_name: database_pgadmin
    depends_on:
      - database
    ports:
      - 8081:80
    networks:
      - database_pgadmin-net
      - database-net
    environment:
      <<: *default-tz-puid-pgid
      TZ: America/Chicago
      PGADMIN_DEFAULT_EMAIL: admin@tripsit.me
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRESS_ADMIN_PASS}
    labels:
    - com.centurylinklabs.watchtower.enable=false
    - traefik.enable=true
    - traefik.docker.network=database_pgadmin-net
    - traefik.http.services.database_pgadmin-svc.loadbalancer.server.port=80
    - traefik.http.routers.database_pgadmin-rtr.rule=Host(`database.${DNS_DOMAIN}`)
    - traefik.http.routers.database_pgadmin-rtr.service=database_pgadmin-svc
    - traefik.http.routers.database_pgadmin-rtr.entrypoints=websecure
    - traefik.http.routers.database_pgadmin-rtr.tls=true
    - traefik.http.routers.database_pgadmin-rtr.middlewares=googleAuth@file

  database_api:
    <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./Dockerfile.api
      # Only will build development stage from our dockerfile
      target: development
    container_name: database_api
    depends_on:
      - database
    ports:
      - 5000:5000
      - 9229:9229
    networks:
      - database_api-net
      - database-net
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      <<: *default-tz-puid-pgid
      PORT: 5000
      TZ: America/Chicago
      DATABASE_URL: postgres://tripsit:${POSTGRESS_ROOT}@database:5432/tripsit
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=false
    command: npm run migrate
    
  database_knex:
    <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./Dockerfile.knex
    container_name: database_knex
    depends_on:
      - database
    networks:
      - database_knex-net
      - database-net
    # volumes:
    #   - ./:/usr/src/app
    #   - /usr/src/app/node_modules
    environment:
      <<: *default-tz-puid-pgid
      PORT: 5000
      TZ: America/Chicago
      DATABASE_URL: postgres://tripsit:${POSTGRESS_ROOT}@database:5432/tripsit
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=false

########################### NETWORKS
networks:
  database_pgadmin-net:
    name: database_pgadmin-net
  database_knex-net:
    name: database_knex-net
  database_api-net:
    name: database_api-net
  database-net:
    name: database-net
    # external: true
  tripbot_website-net:
    name: tripbot_website-net