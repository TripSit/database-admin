version: '3.9'

name: tripsit-dev-apps

########################### EXTENSION FIELDS
# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID
 
# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  security_opt:
    - no-new-privileges:true
  restart: always

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

services:
  database:
    <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./Dockerfile-postgres
    container_name: database
    # Uncomment this if you want the DB to persist between rebuilds
    # volumes:
    #   - ${DOCKERDIR}/appdata/database/data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
        - database-net
    environment:
      POSTGRES_USER: tripsit
      POSTGRES_DB: tripsit
      POSTGRES_PASSWORD: ${POSTGRESS_ROOT}
      POSTGRES_HOST_AUTH_METHOD: trust
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=false

  database_frontend:
    # <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./Dockerfile-pgadmin
    restart: unless-stopped
    container_name: database_frontend
    depends_on:
      - database
    ports:
      - 8081:80
    networks:
      - database_frontend-net
      - database-net
    environment:
      <<: *default-tz-puid-pgid
      TZ: America/Chicago
      PGADMIN_DEFAULT_EMAIL: admin@tripsit.me
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRESS_ADMIN_PASS}
    labels:
    - com.centurylinklabs.watchtower.enable=false
    - traefik.enable=true
    - traefik.docker.network=database_frontend-net
    - traefik.http.services.database_frontend-svc.loadbalancer.server.port=80
    - traefik.http.routers.database_frontend-rtr.rule=Host(`database.${DNS_DOMAIN}`)
    - traefik.http.routers.database_frontend-rtr.service=database_frontend-svc
    - traefik.http.routers.database_frontend-rtr.entrypoints=web
    # - traefik.http.routers.database_frontend-rtr.tls=true
    # - traefik.http.routers.database_frontend-rtr.middlewares=chain-basic-auth@file

  database_backend:
    <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./Dockerfile
      # Only will build development stage from our dockerfile
      target: development
    container_name: database_backend
    depends_on:
      - database
    ports:
      - 5000:5000
      - 9229:9229
    networks:
      - database_backend-net
      - database-net
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      <<: *default-tz-puid-pgid
      PORT: 5000
      TZ: America/Chicago
      DATABASE_URL: postgres://tripsit:${POSTGRESS_ROOT}@database/tripsit
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=true
      - traefik.docker.network=database_backend-net
      - traefik.http.services.database_backend-svc.loadbalancer.server.port=5000
      - traefik.http.routers.database_backend-rtr.rule=Host(`api.${DNS_DOMAIN}`)
      - traefik.http.routers.database_backend-rtr.service=database_backend-svc
      - traefik.http.routers.database_backend-rtr.entrypoints=web
      # - traefik.http.routers.database_backend-rtr.tls=true
      # - traefik.http.routers.database_backend-rtr.middlewares=chain-basic-auth@file
    command: npm run start

########################### NETWORKS
networks:
  database_frontend-net:
    name: database_frontend-net
  database_backend-net:
    name: database_backend-net
  database-net:
    name: database-net